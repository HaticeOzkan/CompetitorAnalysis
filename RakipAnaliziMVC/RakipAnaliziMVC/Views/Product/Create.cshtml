@using Entity
@model Product

<h2>Create Product</h2>

@if (!ViewData.ModelState.IsValid)
{
	<div class="alert alert-danger">
		@Html.ValidationSummary();
	</div>
}


<form method="post">
	<div class="form-group">
		<label>Product Name: </label>
		<input name="ProductName" required class="form-control" />
	</div>
	<div class="form-group">
		<label>SN: </label>
		<input name="SN" class="form-control" />
	</div>
	<div class="form-group">
		<label>Model Code: </label>
		<input name="ModelCode" class="form-control" />
	</div>
	<div class="form-group">
		<label>Brand: </label>
		<select name="BrandId" required>
			<option value="">Choose..</option>
			@foreach (Brand item in ViewBag.Brands)
			{
				<option value="@item.ID">@item.BrandName</option>
			}
		</select>
	</div>
	<div class="form-group">
		<label>Product Groups: </label>
		@foreach (ProductGroup item in ViewBag.ProductGroups)
		{
			<input id="@Html.Raw("C" + item.ID)" type="checkbox" name="groups" value="@item.ID" /> //buradaki name="groups" actiondaki int dizisinin adı
			<label for="@Html.Raw("C" + item.ID)">@item.GroupName</label> //input checkboxın kutucuk kısmı, label yazı kısmı. bu label şu input içindir diye html de belirtebiliyoruz. birinin id si ile diğerinin for kısmı eşleşmiş oluyor. id ve for vermek zorunda değiliz ama kullanmak daha doğru
		}
	</div>
	<button>Save</button>
</form>